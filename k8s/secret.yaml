apiVersion: v1
kind: Secret
metadata:
  name: assessment-service-secret
  namespace: default
  labels:
    app: assessment-service
type: Opaque
data:
  # Database Password (base64 encoded)
  # To encode: echo -n "your-password" | base64
  DB_PASSWORD: cGFzc3dvcmQxMjM=

  # JWT Secret for authentication (base64 encoded)
  JWT_SECRET: anlXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX=

  # Redis Password (base64 encoded)
  REDIS_PASSWORD: cmVkaXNfcGFzc3dvcmQ=

  # Casdoor Client Secret (base64 encoded)
  CASDOOR_CLIENT_ID: Y2xpZW50X2lk
  CASDOOR_CLIENT_SECRET: Y2xpZW50X3NlY3JldA==

  # Casdoor Certificate (base64 encoded)
  CASDOOR_CERT: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t

  # Database URL (complete connection string, base64 encoded)
  DATABASE_URL: cG9zdGdyZXM6Ly9hc3Nlc3NtZW50X3VzZXI6cGFzc3dvcmQxMjNAcG9zdGdyZXMtc2VydmljZTo1NDMyL2Fzc2Vzc21lbnRfZGI/c3NsbW9kZT1yZXF1aXJl

  # Redis URL (complete connection string, base64 encoded)
  REDIS_URL: cmVkaXM6Ly86cmVkaXNfcGFzc3dvcmRAcmVkaXMtc2VydmljZTo2Mzc5LzA=

---
apiVersion: v1
kind: Secret
metadata:
  name: assessment-service-tls
  namespace: default
  labels:
    app: assessment-service
type: kubernetes.io/tls
data:
  # TLS Certificate and Key for HTTPS (base64 encoded)
  # Generate with: kubectl create secret tls assessment-service-tls --cert=tls.crt --key=tls.key --dry-run=client -o yaml
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t