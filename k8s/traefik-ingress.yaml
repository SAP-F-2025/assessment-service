apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: assessment-service-ingress
  namespace: default
  annotations:
    # Traefik specific annotations
    traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: "letsencrypt"
    traefik.ingress.kubernetes.io/router.middlewares: "default-security-headers@kubernetescrd,default-rate-limit@kubernetescrd,default-cors@kubernetescrd"

    # Health check configuration
    traefik.ingress.kubernetes.io/service.serversscheme: "http"
    traefik.ingress.kubernetes.io/service.sticky.cookie: "true"

    # Load balancing
    traefik.ingress.kubernetes.io/service.loadbalancer.method: "wrr"
    traefik.ingress.kubernetes.io/service.loadbalancer.healthcheck.path: "/health"
    traefik.ingress.kubernetes.io/service.loadbalancer.healthcheck.interval: "10s"
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - api.assessment.local
        - assessment.yourcompany.com
      secretName: assessment-tls-cert
  rules:
    # Local development
    - host: api.assessment.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: assessment-service
                port:
                  number: 8080

    # Production domain
    - host: assessment.yourcompany.com
      http:
        paths:
          - path: /api/v1
            pathType: Prefix
            backend:
              service:
                name: assessment-service
                port:
                  number: 8080

          # Health check endpoint
          - path: /health
            pathType: Exact
            backend:
              service:
                name: assessment-service
                port:
                  number: 8080

          # Metrics endpoint (protected)
          - path: /metrics
            pathType: Exact
            backend:
              service:
                name: assessment-service
                port:
                  number: 8080

---
# Multi-service configuration for future services
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: multi-service-ingress
  namespace: default
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: "letsencrypt"
    traefik.ingress.kubernetes.io/router.middlewares: "default-security-headers@kubernetescrd,default-rate-limit@kubernetescrd"
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - api.yourcompany.com
      secretName: multi-service-tls-cert
  rules:
    - host: api.yourcompany.com
      http:
        paths:
          # Assessment Service
          - path: /assessment
            pathType: Prefix
            backend:
              service:
                name: assessment-service
                port:
                  number: 8080

          # User Service (example for future)
          - path: /user
            pathType: Prefix
            backend:
              service:
                name: user-service
                port:
                  number: 8081

          # Notification Service (example for future)
          - path: /notification
            pathType: Prefix
            backend:
              service:
                name: notification-service
                port:
                  number: 8082

          # Payment Service (example for future)
          - path: /payment
            pathType: Prefix
            backend:
              service:
                name: payment-service
                port:
                  number: 8083

          # Analytics Service (example for future)
          - path: /analytics
            pathType: Prefix
            backend:
              service:
                name: analytics-service
                port:
                  number: 8084

          # File Service (example for future)
          - path: /file
            pathType: Prefix
            backend:
              service:
                name: file-service
                port:
                  number: 8085